@model DABugTracker.Models.Project
@using DABugTracker.Services.Interfaces
@using DABugTracker.Models.Enums
@using Microsoft.AspNetCore.Identity

@inject IBTProjectService _projectService;
@inject IBTTicketService _ticketService;
@inject IBTRolesService _roleService;
@inject UserManager<BTUser> UserManager

@{
    ViewData["Title"] = "Details";
    BTUser? user = await UserManager.GetUserAsync(User);

    var currentUserRole = await _roleService.GetUserRolesAsync(user!);
    string? currentRoleName = currentUserRole.FirstOrDefault(r => r != nameof(BTRoles.DemoUser));
}


<!-- Start Content-->
<div class="container-fluid">

    <div class="row">
        <h1>Project Details</h1>
        <div class="col-md-8">
            <div class="card">
                <div class="card-body task-detail">
                    <div class="dropdown float-end">
                        <div class="task-tags mt-2">
                            @* PROJECT'S STATUS *@
                            @if (Model.Archived == true)
                            {
                                <h5 class="text-muted">Archived</h5>
                            }
                            else if (@DateTime.Now > @Model.EndDate)
                            {
                                <h5 class="text-danger">Overdue</h5>
                            }
                            else
                            {
                                <h5 class="text-success">In Progress</h5>
                            }
                            @*<h5>Archived / In Progress / Overdue</h5>*@
                        </div>
                    </div>

                    <div class="d-block mb-3">
                        <h6 class="text-muted font-600">Project Manager:</h6>
                        <div class="flex-grow-1">
                            @if (await _projectService.GetProjectManagerAsync(Model.Id, Model.CompanyId) != null)
                            {
                                <h4 class="media-heading mt-0">
                                    @((await _projectService.GetProjectManagerAsync(Model.Id, Model.CompanyId))!.FullName) <a asp-controller="projects" asp-action="AssignPM" asp-route-id="@Model.Id"><i class="bi bi-pencil-square"></i></a>
                                </h4>
                            }
                            else
                            {
                                <h4 class="media-heading mt-0">
                                    Unassigned <a asp-controller="projects" asp-action="AssignPM" asp-route-id="@Model.Id"><i class="bi bi-pencil-square"></i></a>
                                </h4>
                            }
                        </div>
                    </div>

                    <h2>@Model.Name</h2>

                    <p class="text-muted">
                        @Model.Description
                    </p>

                    <div class="row task-dates mb-0 mt-2">
                        <div class="col-lg-6">
                            <h4 class="font-600 m-b-5">Start Date</h4>
                            <p>@Model.StartDate.ToString("dd MMMM yyyy")<small class="text-muted">@Model.StartDate.ToString("h:mm tt")</small></p>
                        </div>

                        <div class="col-lg-6">
                            <h4 class="font-600 m-b-5">Due Date</h4>
                            <p>@Model.EndDate.ToString("dd MMMM yyyy")<small class="text-muted">@Model.EndDate.ToString("h:mm tt")</small></p>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="attached-files mt-3">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="text-end">
                                    <a asp-controller="projects" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-success waves-effect waves-light me-1">
                                        Edit
                                    </a>
                                    <a asp-controller="projects" asp-action="Archive" asp-route-id="@Model.Id"
                                       class="btn btn-light waves-effect">
                                        Archive / Unarchive
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>Ticket Name</th>
                                    <th>Created Date</th>
                                    <th>Submitter</th>
                                    <th>Developer</th>
                                    <th>Priority</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (Ticket ticket in await _ticketService.GetTicketsByProjectAsync(Model.CompanyId, Model.Id))
                                {
                                    <tr>
                                        <td>@ticket.Title</td>
                                        <td>@ticket.Created.ToString("dd MMMM yyyy")</td>
                                        <td>@ticket.SubmitterUser!.FullName</td>
                                        @if (ticket.DeveloperUserId == null)
                                        {
                                            <td class="text-warning">Unassigned</td>
                                        }
                                        else
                                        {
                                            <td>@ticket.DeveloperUser!.FullName</td>
                                        }

                                        @if (ticket.TicketPriority!.Name == "Low")
                                        {
                                            <td><span class="badge bg-success">@ticket.TicketPriority!.Name</span></td>
                                        }
                                        else if (ticket.TicketPriority!.Name == "Medium")
                                        {
                                            <td><span class="badge bg-primary">@ticket.TicketPriority!.Name</span></td>
                                        }
                                        else if (ticket.TicketPriority!.Name == "High")
                                        {
                                            <td><span class="badge bg-warning">@ticket.TicketPriority!.Name</span></td>
                                        }
                                        else if (ticket.TicketPriority!.Name == "Urgent")
                                        {
                                            <td><span class="badge bg-danger">@ticket.TicketPriority!.Name</span></td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    @*TODO: Only PM and admin can edit project members*@
                    <div class="dropdown float-end">
                        <a asp-controller="projects" asp-action="AssignMember" asp-route-id="@Model.Id" class=" arrow-none card-drop">
                            <i class="bi bi-person-plus"></i>
                        </a>
                    </div>

                    <h4 class="header-title mt-0 mb-3">Project Members (@Model.Members.Count())</h4>

                    <div>
                        <h3 class="mt-0 mb-3 mb-title">Project Manager</h3>
                        @foreach (BTUser member in await _projectService.GetProjectMembersByRoleAsync(Model.Id, nameof(BTRoles.ProjectManager), Model.CompanyId))
                        {
                            <div class="d-flex mb-3 member-card">
                                <div class="flex-grow-1">
                                    <h5 class="mt-0">@member.FullName</h5>
                                    <p class="font-13 text-muted mb-0">
                                        <strong>Project Manager</strong>
                                    </p>
                                    <a href="" class="text-primary font-13">@member.Email</a>
                                </div>
                            </div>
                        }
                        <h3 class="mt-0 mb-3 mb-title">Developers</h3>
                        @foreach (BTUser member in await _projectService.GetProjectMembersByRoleAsync(Model.Id, nameof(BTRoles.Developer), Model.CompanyId))
                        {
                            <div class="d-flex mb-3 member-card">
                                <div class="flex-grow-1">
                                    <h5 class="mt-0">@member.FullName</h5>
                                    <p class="font-13 text-muted mb-0">
                                        <strong>Developer</strong>
                                    </p>
                                    <a href="" class="text-primary font-13">@member.Email</a>
                                </div>
                            </div>
                        }
                        <h3 class="mt-0 mb-3 mb-title">Submitters</h3>
                        @foreach (BTUser member in await _projectService.GetProjectMembersByRoleAsync(Model.Id, nameof(BTRoles.Submitter), Model.CompanyId))
                        {
                            <div class="d-flex mb-3 member-card">
                                <div class="flex-grow-1">
                                    <h5 class="mt-0">@member.FullName</h5>
                                    <p class="font-13 text-muted mb-0">
                                        <strong>Submitter</strong>
                                    </p>
                                    <a href="" class="text-primary font-13">@member.Email</a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

        </div><!-- end col -->
    </div>
    <!-- end row -->

</div> <!-- container -->
